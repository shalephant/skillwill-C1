int main()
{
    char letter = 'T';
    int hundred = 100;
    cout << letter << endl;
    cout << hundred << endl;
    
    float tenten = 10.10;
    double fiftySmth = 50.23;
    
    double sum = 0;
    double count = 0;
    double average;
    
    int array[5] = {5, 10, 15, 20, 30};
    
    for (int i=0; i<5; i++){
        sum += array[i];
        ++count;
    }
    
    average = sum / count;
    
    cout << sum << endl;
    cout << count << endl;
    cout << average << endl;
    return 0;
}

/* 2nd Homework
1. Find the highest out of three inputed integers
*/

int main()
{
    int num1;
    int num2;
    int num3;
    cout << "Enter the fisrt number: ";
    cin >> num1;
    cout << "Enter the second number: ";
    cin >> num2;
    cout << "Enter the third number: ";
    cin >> num3;
    
    if(num1 > num2 && num1 > num3) {
        cout <<  num1 << " is the highest number";
    } else if  (num2 > num1 && num2 > num3) {
        cout << num2 << " is the highest number";
    } else if (num3 > num1 && num3 > num2) {
        cout << num3 << " is the highest number";
    } else {
        cout << "there is no highest number here";
    }

    return 0;
}

/* 2. Find area of the circle.
let user give us the radius */

int main()
{
    double p = 3.14159;
    int r;
    cout << "Enter the radius of the circle: ";
    cin >> r;
    double area = p*(r*r);
    
    cout << "Area of the circle is: " << area;
    cout << p;

    return 0;
}

/* 3. Conversion of Fahrenhait to Celsius
and vice versa. With input by user */

int main()
{
    float celsius;
    float fahrenhait;
    
    string temperatureType;
    cout << "Let's see what temeparture it is today" << endl;
    cout << "Would you like to convert Celsius or Fahrenhait? ";
    cin >> temperatureType;
    if(temperatureType == "Celsius"){
        cout << "enter degrees celsius: ";
        cin >> celsius;
        
    float celsiusToFahrenheit = (celsius * 9 / 5) + 32;
        cout << "It is " << celsiusToFahrenheit << " Degrees Fahrenhait outside";
    }else if(temperatureType == "Fahrenhait") {
        cout << "Enter degrees Fahrenait: ";
        cin >> fahrenhait;

        float fahrenhaitToCelsius = (fahrenhait - 32) * 5 / 9;
        cout << "It is " << fahrenhaitToCelsius << " Degrees Celsius outside";
    }else{
        cout << "temperature type entered incorrectly, try again";
    }
    
    return 0;
}

/* 4. Leap year teller */
int main()
{
    int year;
    cout << "Check if it is a leap year: ";
    cin >> year;
    if (year % 4 == 0) {
        cout << "Yup, " << year << " is indeed a leap year";
    } else {
        cout << year << " is not a leap year, sorry if you were born on 29th of February";
    }
    
    return 0;
}

/* 5. finding the distance between
    two points on coordinate plane */
    
#include <iostream>
#include <cmath>

using namespace std;

int main()
{
    int x1, y1, x2, y2;
    
    cout << "Lets find the distance between two points on coordinate plane." << endl;
    cout << "First, tell me the coordinate for x1: ";
    cin >> x1;
    cout << "And y1, please: ";
    cin >> y1;
    cout << "Now we need x2: ";
    cin >> x2;
    cout << "And last we need y2: ";
    cin >> y2;
    
    float distance = sqrt(pow((x2 - x1),2) + pow((y2 - y1),2));
    
    cout << "And the distance is: " << distance; 
    
    return 0;
}

/* 6. Quadratic equation solver */
#include <iostream>
#include <cmath>
using namespace std;

int main()
{
    int a, b, c;
    float x1;
    float x2;
    cout << "Ah, quadratic equation, our favourite <3 " << endl;
    cout << "Please enter number for a: ";
    cin >> a;
    cout << "Now we need b: ";
    cin >> b;
    cout << "And lastly c: ";
    cin >> c;
    cout << "Now lets find what x could be: " << endl;
    
    x1 = (-b + sqrt(pow(b,2)-(4 * a * c))) / (2 * a);
    x2 = (-b - sqrt(pow(b,2)-(4 * a * c))) / (2 * a);
    cout << "In this case x can be " << x1 << " and " << x2;
    
    return 0;
}

/* 7. Calculator with switch */

int main()
{
    int num1, num2;
    char oper;
    cout << "Please choose your first number: ";
    cin >> num1;
    cout << "Now enter your second number: ";
    cin >> num2;
    cout << "Would would you like to do with them? Options are: +, -, * and / ";
    cin >> oper;
    
    switch (oper) {
        case '+':
            cout << "Addition of those numbers would equal to: " << num1 + num2;
            break;
        case '-':
            cout << "Substraction of those numbers would equal to: " << num1 - num2;
            break;
        case '*':
            cout << "Multiplication of those numbers would equal to: " << num1 * num2;
            break;
        case '/':
            cout << "Division of those numbers would equal to: " << num1 / num2;
            break;
        default: 
            cout << "Please enter right avalible operator";
    }
    return 0;
}

/*HOMEWORK 26 
While loops 
1.Sum of all digits of a number
*/
int main()
{
    int number;
    cout<<"Enter the number: ";
    cin>>number;
    int addition = 0;
    int leftover;
    
    while(number>0){
        leftover = number%10;
        number = number /10;
        addition = addition + leftover;
    }
    
    cout<<"Sum of all digits of that number is: "<<addition;

    return 0;
}

/*
3. Bigges divisor of two numbers 
*/
int main()
{
    int num1, num2;
    cout<<"Enter the first number: ";
    cin>>num1;
    cout<<"Enter the second number: ";
    cin>>num2;
  
  /*numbers substract each outher, 
  untill they become the same number,
  which will be the greatest divisor for both*/
  
    while(num1 != num2) {
        if(num1>num2){
            num1 = num1 - num2;
        } else {
            num2 = num2 - num1;
        }
    }
    cout<<"Yvelaze didi gamyopi: "<<num1;

    return 0;
}

/*
5. Write a program using integers usernum and x as input, and output usernum divided by x four times.
*/

int main()
{
    int yourNum, x;
    int i = 0;
    cout<<"Enter yourNum: ";
    cin>>yourNum;
    cout<<"Enter x: ";
    cin>>x;
    
    while(i<4){
        yourNum = yourNum / x;
        cout<<yourNum;
        i++;
    }
    

    return 0;
}

/* 28 Nested loops and 2D Arrays */
/* 1.average of 5 numbers*/
int main()
{
    int num[5];
    int sum = 0;
    int average;
    cout<<"Enter 5 numbers, to find their average:";
    for (int i=0; i<5; i++){
        cin>>num[i];
        
        sum += num[i];
    }
    for (int i=0; i<5; i++){
    }
    cout<< sum;
    average = sum/5;
    cout <<"Average is: "<<average;
    return 0;
}

/* 2. Sum of array elements */
int main()
{
    int array[100];
    int sum = 0;
    int arraySize = 0;
    cout<<"Enter array size: ";
    cin>>arraySize;
    cout<<"Now enter that many elements: ";
    for (int i=0; i<arraySize; i++){
        cin>>array[i];
        sum += array[i];
    }
    cout<<"Sum of them is: "<< sum;
    return 0;
}


/* 29 Functions

1. Division function */

using namespace std;
    
    int division(int a,int b){
    float c = a / b;
    return c;
    } 


int main()
{
    int firstNumber;
    int secondNumber;
    
    cout<<"Enter the first number: ";
    cin>>firstNumber;
    cout<<"Enter the second number: ";
    cin>>secondNumber;
    
    cout<<division(firstNumber, secondNumber);

/*2. Same but with void */
    int division(int a,int b){
    float c = a / b;
    cout<<"Division of those numbers equal to: "<<c;
    } 


int main()
{
    int firstNumber;
    int secondNumber;
    
    cout<<"Enter the first number: ";
    cin>>firstNumber;
    cout<<"Enter the second number: ";
    cin>>secondNumber;
    
    division(firstNumber, secondNumber);
    return 0;
}

/*3. Fibonacci */
using namespace std;
    
    int fib(int n){
        if (n <= 1){
            return n;
        }else{
           return fib(n-1)+fib(n-2);
            }
    }   

int main()
{
    int n = 0;
    cout<<"Enter the number: ";
    cin>>n;
    
    for (int i=1; i<=n; i++){
        cout<<fib(i);
    }
    
    return 0;
}

/* Power function */
using namespace std;
    
int powwer(int n,int p) {
    int y = n;
    for(int i=1; i<p; i++){
        n *= y;
        
    }
    return n;
}

int main()
{
    int number;
    int to;
    cout<<"Enter some number ";
    cin>>number;
    cout<<"How much should we power it? " ;
    cin>>to;
    
    cout<<powwer(number, to);
    
    
    return 0;
}


/* 31. Recurssion

1. Natural numbers till 50 */

#include <iostream>

using namespace std;

void printNum(int num) {
        if(num <= 50){
            cout<<num;
            printNum(num + 1);
            
        }
    }
    
int main()
{
    int num = 1;
    printNum(num);
    

    return 0;
}


/* 2. Sum from 1 till chosen number */

#include <iostream>

using namespace std;

int sumTill(int num) {
    int minus;
        if(num == 1){
            return 1;
        }else{
            minus = num + sumTill(num - 1);
            
        }
        return minus;
        
    }
    
int main()
{
    int num;
    int sum;
    cout<<"Enter the number: ";
    cin>>num;
    
    cout<<sumTill(num);
    

    return 0;
}


/*3. Fibonacci */

#include <iostream>

using namespace std;

int fibonacci(int num) {
        if(num <= 1){
            return 1;
        }else{
            return fibonacci(num-1) + fibonacci(num-2);
             }
    }
    
int main()
{
    int num;
    cout<<"Enter how many fibonacci numbers u'd like to see: ";
    cin>>num;
    
    for(int i=0; i < num; i++){
        cout<<fibonacci(i);
    }
    

    return 0;
}


/*32. Rectangle paramatere using Encapsulation */
#include <iostream>

using namespace std;

class Rectangle {
    private:
        int width;
        int height;
    public:
        int getWidth() {
            return width;
        };
        int getHeight() {
            return height;
        };
        
        void setWidth(int newWidth) {
            width = newWidth;
        };
        
        void setHeight(int newHeight) {
            height = newHeight;
        };
        
        int perimeter(){
            return height * 2 + width * 2;
            
        };
};

int main()
{
    Rectangle rectangle;
    int h = 0;
    int w = 0;
    cout<<"Rectangle height is: ";
    cin>>h;
    cout<<"Rectangle width is: ";
    cin>>w;
    
    rectangle.setHeight(h);
    cout<<"If rectangles height is "<<rectangle.getHeight()<<" ";
    rectangle.setWidth(w);
    cout<<"and rectangles width is "<<rectangle.getWidth()<<endl;
    
    cout<<"Perimeter equals to: ";
    cout<<rectangle.perimeter();

    return 0;
}

/* 34. Classes using constructors */
#include <iostream>

using namespace std;

class Whiskey {
    public:
        string Name;
        int Age;
        string Region;
    
        Whiskey(string name, int age, string region){
            Name = name;
            Age = age;
            Region = region;
        }
        Whiskey(string name, string region){
            Name = name;
            Age = 3;
            Region = region;
        }
        
        void introduction(){
            cout<<"This wiskey is "<<Name<<" it was kept in barrels for minimum "<<Age<<" years and it is from "<<Region<<endl;
        }
};

int main()
{
    Whiskey macallan("Macallan", 12, "Scotland");
    macallan.introduction();
    
    Whiskey wildTurkey("Wild Turkey", 8, "Kentucky, USA");
    wildTurkey.introduction();
    
    Whiskey jameson("Jameson", "Ireland");
    jameson.introduction();

    return 0;
}
